name: Build Docker Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  REGISTRY_IMAGE: airdata/jenkins
  
jobs:

  build:

    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REG_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.REG_USERNAME }}
          password: ${{ secrets.REG_TOKEN }}
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            name=ghcr.io/${{ env.REGISTRY_IMAGE }}-master
            name=${{ env.REGISTRY_IMAGE }}-master
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
          labels: |
            maintainer=Airdata Edition
            org.opencontainers.image.title=ansible-in-docker
            org.opencontainers.image.description=Ansible
            org.opencontainers.image.vendor=Airdata Corp.
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./jenkins-slave
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.REG_TOKEN }}
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
